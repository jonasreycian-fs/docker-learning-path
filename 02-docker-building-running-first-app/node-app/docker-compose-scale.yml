# Recreate only the `node`
# docker compose up -d --no-deps node 

# Key Docker Compose Commands
# docker compose --help   
# docker compose up                           : Start the containers in log mode
# docker compose up -d                        : Start the containers in detach mode
# docker compose up -d --no-deps [service]    : Starts indicated service
# docker compose down                         : Removes all services in a container
# docker compose ps                           : List all services
# docker compose stop [service]               : Stop a service
# docker compose start [service]              : Start a service

# Scale the containers 
# docker compose up -d 
#   --scale 
#   api=4

version: '3.7'

services:
  
  # api:
  #   image: my-api
  #   build: 
  #     ...
  #   deploy:
  #     replicas: 2                   : Define number of replicas to create for a service deployment
  #     restart_policy:
  #       condition: on-failure       : Define restart policy
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s

  node:
    # container_name: nodeapp
    image: nodeapp
    build:
      context: .
      dockerfile: node.dockerfile
      args:
        PACKAGES: "nano wget curl"    # Packages to be installed in the environment
    ports:
      - "3000:3000"
    networks:
      - nodeapp-network
    volumes:
      - ./logs:/var/www/logs
    environment:
      - NODE_ENV=production
      - APP_VERSION=1.0
    depends_on: 
      - mongodb
      
  mongodb:
    container_name: mongodb
    image: mongo
    networks:
      - nodeapp-network

networks:
  nodeapp-network:
    driver: bridge